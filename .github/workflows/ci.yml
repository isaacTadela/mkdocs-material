name: ci
on:
  push:
    branches:
      - main
permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git fetch origin gh-pages:gh-pages --depth=1
          remote_repo="https://${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          # copy old version.json to previous.versions.json
          git show gh-pages:versions.json > previous.versions.json

      - name: Compare versions
        run: |
          PREV_VER="$(jq -r '.[0].version' "previous.versions.json")"
          VER=$(cat ver)
          echo "PREV_VER=$PREV_VER" >> $GITHUB_ENV
          echo "VER=$VER" >> $GITHUB_ENV
          echo "Compare version $PREV_VER --> $VER"

      - name: Set up Python 3.11
        # if: ${{ env.PREV_VER != env.VER }}
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        # if: ${{ env.PREV_VER != env.VER }}
        run: pip install -r requirements.txt

      - name: mike list
        if: ${{ env.PREV_VER != env.VER }}
        run: |
          # mike deploy --update-aliases ${{ env.VER }} latest
          # mike set-default latest
          mike list

      - name: deploy
        # if: ${{ env.PREV_VER != env.VER }}
        run: |
          mike props --delete-all 0.9
          mike props --delete-all ${{ env.PREV_VER }}
          mike list
          echo "Deploy version ${{ env.PREV_VER }} ==> ${{ env.VER }}"
          # mike deploy -t "${{ env.VER }} (latest)" -u -p ${{ env.VER }} latest
          # mike list
