name: ci
on:
  push:
    branches:
      - main
permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          # Fetch all history for applying timestamps to every page
          fetch-depth: 0

      - name: Configure Git
        run: |
          git fetch origin gh-pages:gh-pages --depth=1
          remote_repo="https://${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          # copy old version.json to previous.versions.json
          git show gh-pages:versions.json > previous.versions.json

      - name: Compare versions
        env:
          MKDOCS_GIT_COMMITTERS_APIKEY: ${{ secrets.MKDOCS_GIT_COMMITTERS_APIKEY }}
        run: |
          PREV_VER="$(jq -r '.[0].version' "previous.versions.json")"
          VER=$(cat ver)
          echo "PREV_VER=$PREV_VER" >> $GITHUB_ENV
          echo "VER=$VER" >> $GITHUB_ENV
          echo "Compare version $PREV_VER --> $VER"
          export MKDOCS_GIT_COMMITTERS_APIKEY=${{ secrets.MKDOCS_GIT_COMMITTERS_APIKEY }}
          echo -n "$MKDOCS_GIT_COMMITTERS_APIKEY" | base64

      - name: Set up Python 3.11
        if: ${{ env.PREV_VER != env.VER }}
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        if: ${{ env.PREV_VER != env.VER }}
        run: pip install -r requirements.txt

      - run: mkdocs build --no-strict

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site

      # - name: deploy
      #   if: ${{ env.PREV_VER != env.VER }}
      #   env:
      #     MKDOCS_GIT_COMMITTERS_APIKEY: ${{ secrets.MKDOCS_GIT_COMMITTERS_APIKEY }}
      #   run: |
      #     export MKDOCS_GIT_COMMITTERS_APIKEY=${{ secrets.MKDOCS_GIT_COMMITTERS_APIKEY }}
      #     echo -n "$MKDOCS_GIT_COMMITTERS_APIKEY" | base64
      #     mike retitle ${{ env.PREV_VER }} ${{ env.PREV_VER }}
      #     echo "Deploy version ${{ env.PREV_VER }} ==> ${{ env.VER }}"
      #     mike set-default latest
      #     mike deploy -t "${{ env.VER }}" -u -p ${{ env.VER }} latest
      #     mike list

